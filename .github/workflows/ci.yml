name: ci

on:
  push:
    branches: ['**']
  pull_request:
    branches: [main]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-bookstore:
    runs-on: ubuntu-22.04
    env:
      TEST_USERS_JSON: ${{ secrets.TEST_USERS_JSON }}
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Cache Playwright
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
            ~/.cache/playwright
          key: pw-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pw-${{ runner.os }}-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers + system deps
        run: python -m playwright install --with-deps ${{ matrix.browser }}

      - name: Lint & format
        run: |
          ruff check .
          ruff format --check .

      - name: Type check
        run: mypy --check-untyped-defs --ignore-missing-imports --explicit-package-bases .

      - name: Run bookstore E2E (xdist + retry failed)
        run: |
          mkdir -p reports/${{ matrix.browser }} artifacts/${{ matrix.browser }}
          pytest bookstore/tests/ -v \
            --browser ${{ matrix.browser }} \
            --video on --tracing on \
            -n auto \
            --dist loadfile \
            --maxfail=1 \
            --reruns 1 --reruns-delay=2 \
            --junitxml=reports/${{ matrix.browser }}/junit.xml \
            --randomly-seed=${{ github.run_number }}

      - name: Upload JUnit (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-${{ matrix.browser }}
          path: reports/${{ matrix.browser }}/junit.xml
          retention-days: 7

      - name: Upload failure artifacts (videos/traces/screens)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: bookstore-failure-${{ matrix.browser }}
          path: |
            test-results/**
            **/playwright-report/**
            **/videos/**
            **/screenshots/**
          retention-days: 7

  test-notes:
    runs-on: ubuntu-22.04
    env:
      TEST_USERS_JSON: ${{ secrets.TEST_USERS_JSON }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint & format
        run: |
          ruff check .
          ruff format --check .

      - name: Type check
        run: mypy --check-untyped-defs --ignore-missing-imports --explicit-package-bases .

      - name: Run notes API tests (with JUnit)
        run: |
          mkdir -p reports/notes
          pytest notes/tests/ -v \
            --junitxml=reports/notes/junit.xml \
            --randomly-seed=${{ github.run_number }}

      - name: Upload JUnit (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-notes
          path: reports/notes/junit.xml
          retention-days: 7
