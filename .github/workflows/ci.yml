name: ci

on:
  push:
    branches: ['**']
  pull_request:
    branches: [main]

jobs:
  test-bookstore:
    runs-on: ubuntu-22.04
    env:
      TEST_USERS_JSON: ${{ secrets.TEST_USERS_JSON }}
    strategy:
      matrix:
        browser: [chromium, firefox]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
            ~/.cache/playwright
          key: playwright-${{ runner.os }}-${{ matrix.browser }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            playwright-${{ runner.os }}-${{ matrix.browser }}-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers + system deps
        run: python -m playwright install --with-deps ${{ matrix.browser }}

      - name: Lint and format check
        run: |
          ruff check .
          ruff format --check .

      - name: Type check
        run: mypy --check-untyped-defs --ignore-missing-imports --explicit-package-bases .

      - name: Run bookstore E2E tests in parallel
        run: |
          pytest bookstore/tests/ -v \
            --browser ${{ matrix.browser }} \
            --video on --tracing on \
            -n auto \
            --randomly-seed=${{ github.run_number }}

      - name: Upload failure artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: bookstore-failure-artifacts-${{ matrix.browser }}
          path: |
            test-results/
            videos/
            screenshots/

  test-notes:
    runs-on: ubuntu-22.04
    env:
      TEST_USERS_JSON: ${{ secrets.TEST_USERS_JSON }}
    strategy:
      matrix:
        browser: [chromium, firefox]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
            ~/.cache/playwright
          key: playwright-${{ runner.os }}-${{ matrix.browser }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            playwright-${{ runner.os }}-${{ matrix.browser }}-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers + system deps
        run: python -m playwright install --with-deps ${{ matrix.browser }}

      - name: Lint and format check
        run: |
          ruff check .
          ruff format --check .

      - name: Type check
        run: mypy --check-untyped-defs --ignore-missing-imports --explicit-package-bases .

      - name: Run notes UI tests
        run: |
          pytest notes/tests/ui/ -v \
            --browser ${{ matrix.browser }} \
            -n auto \
            --randomly-seed=${{ github.run_number }}

  test-notes-api:
    runs-on: ubuntu-22.04
    env:
      TEST_USERS_JSON: ${{ secrets.TEST_USERS_JSON }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint and format check
        run: |
          ruff check notes/tests/api/
          ruff format --check notes/tests/api/

      - name: Type check
        run: mypy --check-untyped-defs --ignore-missing-imports --explicit-package-bases notes/tests/api/

      - name: Run notes API tests
        run: |
          pytest notes/tests/api/ -v \
            --randomly-seed=${{ github.run_number }}